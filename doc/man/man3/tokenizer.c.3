.TH "euler/parser/tokenizer.c" 3 "Thu Feb 13 2020" "Euler Computer Algebra System" \" -*- nroff -*-
.ad l
.nh
.SH NAME
euler/parser/tokenizer.c
.SH SYNOPSIS
.br
.PP
\fC#include 'grammar\&.h'\fP
.br
\fC#include 'tokenizer\&.h'\fP
.br
\fC#include 'symbol_table\&.h'\fP
.br
\fC#include 'ast\&.h'\fP
.br
\fC#include '\&.\&./inc/_atof\&.h'\fP
.br
\fC#include '\&.\&./inc/_itoa\&.h'\fP
.br
\fC#include '\&.\&./inc/_strcpy\&.h'\fP
.br
\fC#include '\&.\&./inc/strplace\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBPARSE_TRACE\fP"
.br
.ti -1c
.RI "#define \fBTOKENIZE_AND_FILL_ST\fP(query,  e)"
.br
.ti -1c
.RI "#define \fBPUSH_TOKEN_STREAM_TO_PARSER\fP(st,  e,  p)"
.br
.ti -1c
.RI "#define \fBFINISH_PARSING\fP(e)   \fBparse\fP(parser, 0, \fBNULL\fP, e)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBfill_lex\fP (char *q)"
.br
.ti -1c
.RI "int \fBlex\fP (symbol_table_t *symbol_table)"
.br
.ti -1c
.RI "void \fBinit_parser\fP (ersl_t *euler, char *q)"
.br
.ti -1c
.RI "void \fBparse_query\fP (ersl_t *euler)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "char * \fBYYCURSOR\fP"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define FINISH_PARSING(e)   \fBparse\fP(parser, 0, \fBNULL\fP, e)"

.SS "#define PARSE_TRACE"

.SS "#define PUSH_TOKEN_STREAM_TO_PARSER(st, e, p)"
\fBValue:\fP
.PP
.nf
token = 0;                                                             \
        while (token != EOQ) {                                                 \
                token = st_get_next_token(st, p);                              \
                parse(parser, token, NULL, e);                                 \
        }                                                                      \
        FINISH_PARSING(e)
.fi
.SS "#define TOKENIZE_AND_FILL_ST(query, e)"
\fBValue:\fP
.PP
.nf
init_parser(e, query);                                                 \
        while (lex(&(e->symbol_table)) != EOQ)
.fi
.SH "Function Documentation"
.PP 
.SS "void fill_lex (char * q)"

.SS "void init_parser (ersl_t * euler, char * q)"

.SS "int lex (symbol_table_t * symbol_table)"

.SS "void parse_query (ersl_t * euler)"

.SH "Variable Documentation"
.PP 
.SS "char* YYCURSOR"

.SH "Author"
.PP 
Generated automatically by Doxygen for Euler Computer Algebra System from the source code\&.
